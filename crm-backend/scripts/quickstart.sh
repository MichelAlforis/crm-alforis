#!/bin/bash
# ===========================================
# üöÄ CRM BACKEND - QUICK START (Docker v2)
# ===========================================

set -e

echo "======================================"
echo "   TPM Finance CRM - Quick Start"
echo "======================================"
echo ""

# ---- Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m'

# ---- V√©rification Docker
echo "üîç V√©rification Docker et Compose..."

if ! command -v docker &> /dev/null; then
  echo -e "${RED}‚ùå Docker non install√©${NC}"
  echo "   https://www.docker.com/products/docker-desktop"
  exit 1
fi

if ! docker compose version &> /dev/null; then
  echo -e "${RED}‚ùå Docker Compose v2 non disponible${NC}"
  exit 1
fi

echo -e "${GREEN}‚úÖ Docker et Compose d√©tect√©s${NC}"

# ---- Nettoyage pr√©alable
echo ""
echo "üßπ Nettoyage d'anciennes instances..."
docker compose down -v --remove-orphans >/dev/null 2>&1 || true

# ---- Cr√©ation du .env si besoin
ENV_FILE="./crm-backend/.env.local"
if [ ! -f "$ENV_FILE" ]; then
  echo "üìù Cr√©ation de $ENV_FILE √† partir de .env.example..."
  cp ./crm-backend/.env.example "$ENV_FILE" 2>/dev/null || touch "$ENV_FILE"
  echo -e "${GREEN}‚úÖ $ENV_FILE cr√©√©${NC}"
fi

# ---- D√©marrage du stack (sans frontend)
echo ""
echo "üöÄ D√©marrage du backend (Postgres + API)..."
docker compose up -d postgres api

# ---- Attente de la sant√©
echo ""
echo "üè• V√©rification de la sant√© de l‚ÄôAPI..."
MAX_ATTEMPTS=30
ATTEMPT=0
API_URL="http://localhost:8000/health"

while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
  if curl -s "$API_URL" > /dev/null; then
    echo -e "${GREEN}‚úÖ API est pr√™te !${NC}"
    break
  fi
  echo "‚è≥ Tentative $((ATTEMPT + 1))/$MAX_ATTEMPTS..."
  sleep 2
  ATTEMPT=$((ATTEMPT + 1))
done

if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
  echo -e "${RED}‚ùå API non accessible apr√®s 60s${NC}"
  echo "   Logs: docker compose logs -f api"
  exit 1
fi

echo ""
echo "======================================"
echo -e "${GREEN}‚ú® Succ√®s ! Acc√©dez √† l'API :${NC}"
echo "======================================"
echo ""
echo "üìö Swagger UI ‚Üí http://localhost:8000/docs"
echo "üìñ ReDoc       ‚Üí http://localhost:8000/redoc"
echo "‚ù§Ô∏è Healthcheck ‚Üí http://localhost:8000/health"
echo ""
echo "======================================"
echo ""
read -p "Voir les logs de l‚ÄôAPI ? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
  docker compose logs -f api
fi
