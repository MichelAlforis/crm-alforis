#!/bin/bash

# üöÄ CRM BACKEND - QUICK START
# Ce script vous aide √† d√©marrer rapidement

set -e

echo "======================================"
echo "   TPM Finance CRM - Quick Start"
echo "======================================"
echo ""

# Couleurs
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# V√©rifier Docker
echo "üîç V√©rification des pr√©requis..."

if ! command -v docker &> /dev/null; then
    echo -e "${RED}‚ùå Docker n'est pas install√©${NC}"
    echo "   T√©l√©chargez Docker: https://www.docker.com"
    exit 1
fi

if ! command -v docker-compose &> /dev/null; then
    echo -e "${RED}‚ùå Docker Compose n'est pas install√©${NC}"
    exit 1
fi

echo -e "${GREEN}‚úÖ Docker et Docker Compose trouv√©s${NC}"

# Aller dans le r√©pertoire du projet
cd "$(dirname "$0")/crm-backend" || exit

echo ""
echo "üìÅ R√©pertoire du projet: $(pwd)"

# Cr√©er .env s'il n'existe pas
if [ ! -f .env ]; then
    echo ""
    echo "üìù Cr√©ation du fichier .env..."
    cp .env.example .env
    echo -e "${GREEN}‚úÖ .env cr√©√© (utilise les valeurs par d√©faut)${NC}"
fi

# D√©marrer les services
echo ""
echo "üöÄ D√©marrage des services..."
docker-compose up -d

echo ""
echo "‚è≥ Attente du d√©marrage de la BD..."
sleep 5

# V√©rifier la sant√©
echo ""
echo "üè• V√©rification de la sant√©..."

MAX_ATTEMPTS=30
ATTEMPT=0

while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
    if curl -s http://localhost:8000/health > /dev/null; then
        echo -e "${GREEN}‚úÖ API est pr√™te!${NC}"
        break
    fi
    echo "‚è≥ Tentative $((ATTEMPT + 1))/$MAX_ATTEMPTS..."
    sleep 1
    ATTEMPT=$((ATTEMPT + 1))
done

if [ $ATTEMPT -eq $MAX_ATTEMPTS ]; then
    echo -e "${RED}‚ùå L'API n'a pas d√©marr√© √† temps${NC}"
    echo "   V√©rifiez: docker-compose logs -f api"
    exit 1
fi

# Afficher les URLs
echo ""
echo "======================================"
echo -e "${GREEN}‚ú® Succ√®s! Acc√©dez √† l'API:${NC}"
echo "======================================"
echo ""
echo "üìö Documentation interactive:"
echo "   üîó http://localhost:8000/docs"
echo ""
echo "üìñ Documentation alternative:"
echo "   üîó http://localhost:8000/redoc"
echo ""
echo "‚ù§Ô∏è  Health check:"
echo "   üîó http://localhost:8000/health"
echo ""
echo "======================================"

# Afficher les logs
echo ""
read -p "Voulez-vous voir les logs? (y/n) " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    docker-compose logs -f api
fi