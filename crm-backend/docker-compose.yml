services:
  # ============= PostgreSQL Database =============
  postgres:
    image: postgres:16-alpine
    container_name: crm-postgres
    environment:
      POSTGRES_USER: crm_user
      POSTGRES_PASSWORD: crm_password
      POSTGRES_DB: crm_db
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5433:5432"        # hôte:conteneur (évite conflit avec 5432 local)
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U crm_user -d crm_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crm-network

  # ============= FastAPI Backend =============
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crm-api
    environment:
      DATABASE_URL: postgresql://crm_user:crm_password@postgres:5432/crm_db
      DATABASE_ECHO: "False"
      DEBUG: "True"
      SECRET_KEY: "your-super-secret-key-change-in-production"
      ALLOWED_ORIGINS: '["http://localhost:3000","http://localhost:3010","http://localhost:5173"]'
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./:/app
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    ports:
      - "8000:8000"
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - crm-network
    restart: on-failure

volumes:
  postgres_data:

networks:
  crm-network:
    driver: bridge
