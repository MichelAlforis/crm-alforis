#!/usr/bin/env python3
"""
Test rapide de la configuration Outlook
V√©rifie que les credentials Microsoft sont charg√©s
"""
import sys
sys.path.insert(0, 'crm-backend')

from core.config import settings

print("üîç V√©rification configuration Microsoft OAuth\n")

print(f"‚úì CLIENT_ID: {settings.microsoft_client_id[:20]}..." if settings.microsoft_client_id else "‚úó CLIENT_ID manquant")
print(f"‚úì CLIENT_SECRET: {settings.microsoft_client_secret[:10]}..." if settings.microsoft_client_secret else "‚úó CLIENT_SECRET manquant")
print(f"‚úì REDIRECT_URI: {settings.microsoft_redirect_uri}")

if settings.microsoft_client_id and settings.microsoft_client_secret:
    print("\n‚úÖ Configuration Outlook OK - Le service devrait √™tre actif")

    # Test d'instanciation du service
    try:
        from services.outlook_integration import OutlookIntegration
        print("\nüß™ Test d'instanciation OutlookIntegration...")

        # Mock minimal de Session
        class MockDB:
            def query(self, *args): return self
            def filter(self, *args): return self
            def first(self): return None
            def add(self, obj): pass
            def commit(self): pass

        service = OutlookIntegration(MockDB())
        print(f"‚úÖ OutlookIntegration instanci√© avec client_id={service.client_id[:20]}...")

        # Test g√©n√©ration URL
        auth_url = service.get_authorization_url("test_state")
        print(f"‚úÖ URL d'autorisation g√©n√©r√©e: {auth_url[:80]}...")

    except Exception as e:
        print(f"‚ùå Erreur lors de l'instanciation: {e}")
else:
    print("\n‚ö†Ô∏è  Configuration Outlook incompl√®te - Le service sera d√©sactiv√©")
