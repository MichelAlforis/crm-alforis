{
  "openapi": "3.0.3",
  "info": {
    "title": "Alforis CRM API",
    "version": "1.0.0",
    "description": "Documentation de référence de l'API CRM Alforis. Les endpoints décrits couvrent les fonctionnalités principales livrées dans le plan d'amélioration : authentification, organisations, personnes, tâches, mandats, recherche globale, exports et webhooks.",
    "contact": {
      "name": "Équipe CRM Alforis",
      "email": "tech@alforis-finance.com"
    }
  },
  "servers": [
    {
      "url": "https://crm.alforis-finance.com",
      "description": "Production"
    },
    {
      "url": "http://localhost:8000",
      "description": "Développement local"
    }
  ],
  "tags": [
    {
      "name": "health",
      "description": "Endpoints de monitoring"
    },
    {
      "name": "authentication",
      "description": "Authentification et tokens JWT"
    },
    {
      "name": "organisations",
      "description": "Gestion des organisations et mandats"
    },
    {
      "name": "people",
      "description": "Gestion des personnes et des liens"
    },
    {
      "name": "tasks",
      "description": "Gestion des tâches CRM"
    },
    {
      "name": "mandats",
      "description": "Gestion des mandats de distribution"
    },
    {
      "name": "search",
      "description": "Recherche full-text et autocomplete"
    },
    {
      "name": "exports",
      "description": "Exports CSV / Excel / PDF"
    },
    {
      "name": "webhooks",
      "description": "Gestion des webhooks sortants"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Vérifie l'état de l'API",
        "responses": {
          "200": {
            "description": "Status du service et de la base",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthCheck"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "health"
        ],
        "summary": "Informations génériques",
        "responses": {
          "200": {
            "description": "Informations de base",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "version": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "docs": {
                      "type": "string"
                    },
                    "health": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Authentifier un utilisateur",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token JWT",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/me": {
      "get": {
        "tags": [
          "authentication"
        ],
        "summary": "Informations de l'utilisateur connecté",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Profil basique",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/refresh": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Rafraîchir un token JWT",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Nouveau token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "tags": [
          "authentication"
        ],
        "summary": "Logout côté client",
        "responses": {
          "200": {
            "description": "Confirmation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/organisations": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Lister les organisations",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            },
            "description": "Offset de pagination"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            },
            "description": "Taille de page"
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Institution",
                "Wholesale",
                "SDG",
                "CGPI",
                "Autres"
              ]
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page d'organisations",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganisations"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "organisations"
        ],
        "summary": "Créer une organisation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Organisation créée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/organisations/search": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Recherche textuelle organisations",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats paginés",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganisations"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/organisations/stats": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Statistiques globales",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Statistiques",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationStats"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/organisations/by-language/{language}": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Organisations par langue",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            }
          },
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOrganisations"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/organisations/{organisation_id}": {
      "get": {
        "tags": [
          "organisations"
        ],
        "summary": "Détail d'une organisation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "organisation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation détaillée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganisationDetail"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "tags": [
          "organisations"
        ],
        "summary": "Mettre à jour une organisation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "organisation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganisationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Organisation mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "organisations"
        ],
        "summary": "Supprimer une organisation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "organisation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supprimé"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/people": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Lister les personnes",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "organisation_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2
            }
          },
          {
            "name": "language",
            "in": "query",
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 5
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page de personnes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPeople"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "people"
        ],
        "summary": "Créer une personne",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Personne créée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/people/{person_id}": {
      "get": {
        "tags": [
          "people"
        ],
        "summary": "Détail d'une personne",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Personne détaillée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonDetail"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "people"
        ],
        "summary": "Mettre à jour une personne",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Personne mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "people"
        ],
        "summary": "Supprimer une personne",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supprimé"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/tasks": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Lister les tâches",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "todo",
                "doing",
                "done",
                "snoozed"
              ]
            }
          },
          {
            "name": "priority",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "critique",
                "haute",
                "moyenne",
                "basse",
                "non_prioritaire"
              ]
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "relance",
                "rdv",
                "email",
                "due_diligence",
                "admin",
                "pitch",
                "negociation",
                "autre"
              ]
            }
          },
          {
            "name": "view",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "today",
                "overdue",
                "next7",
                "all"
              ]
            }
          },
          {
            "name": "investor_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "organisation_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "person_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page de tâches",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedTasks"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Créer une tâche",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tâche créée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/tasks/stats": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Statistiques des tâches",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Stats agrégées",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskStats"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}": {
      "get": {
        "tags": [
          "tasks"
        ],
        "summary": "Détail d'une tâche",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Tâche détaillée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "tasks"
        ],
        "summary": "Mettre à jour une tâche",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tâche mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "tasks"
        ],
        "summary": "Supprimer une tâche",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supprimé"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/snooze": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Snoozer une tâche",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskSnoozeRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tâche snoozée",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/tasks/{task_id}/quick-action": {
      "post": {
        "tags": [
          "tasks"
        ],
        "summary": "Action rapide",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TaskQuickActionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tâche mise à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/mandats": {
      "get": {
        "tags": [
          "mandats"
        ],
        "summary": "Lister les mandats",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 1000
            }
          },
          {
            "name": "organisation_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "proposé",
                "signé",
                "actif",
                "terminé"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Page de mandats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMandats"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "mandats"
        ],
        "summary": "Créer un mandat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MandatCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Mandat créé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mandat"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/mandats/active": {
      "get": {
        "tags": [
          "mandats"
        ],
        "summary": "Mandats actifs",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "organisation_id",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mandat"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/mandats/organisation/{organisation_id}": {
      "get": {
        "tags": [
          "mandats"
        ],
        "summary": "Mandats d'une organisation",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "organisation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Mandat"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/mandats/{mandat_id}": {
      "get": {
        "tags": [
          "mandats"
        ],
        "summary": "Détail d'un mandat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mandat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mandat détaillé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MandatDetail"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "mandats"
        ],
        "summary": "Mettre à jour un mandat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mandat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MandatUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Mandat mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Mandat"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "mandats"
        ],
        "summary": "Supprimer un mandat",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "mandat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supprimé"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Lister les webhooks",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Liste",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Webhook"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Créer un webhook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Webhook créé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Détail d'un webhook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Webhook détaillé",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": [
          "webhooks"
        ],
        "summary": "Mettre à jour un webhook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Webhook mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Supprimer un webhook",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Supprimé"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/webhooks/{webhook_id}/rotate-secret": {
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Rotation du secret HMAC",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "webhook_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookRotateSecretRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Secret mis à jour",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Webhook"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/api/v1/webhooks/events/available": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Événements supportés",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des événements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "value": {
                        "type": "string"
                      },
                      "label": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "value",
                      "label"
                    ]
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/search": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Recherche globale multi-entités",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2
            }
          },
          {
            "name": "types",
            "in": "query",
            "schema": {
              "type": "string",
              "description": "organisations,people,mandats,tasks"
            }
          },
          {
            "name": "limit_per_type",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats regroupés",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchGlobalResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/search/organisations": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Recherche avancée organisations",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2
            }
          },
          {
            "name": "category",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "Institution",
                "Wholesale",
                "SDG",
                "CGPI",
                "Autres"
              ]
            }
          },
          {
            "name": "city",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "is_active",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "pipeline_stage",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats paginés",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCollection"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/search/people": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Recherche profils",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCollection"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/api/v1/search/mandats": {
      "get": {
        "tags": [
          "search"
        ],
        "summary": "Recherche mandats",
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "offset",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Résultats",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchCollection"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthCheck": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "database": {
            "type": "boolean"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "status",
          "database",
          "timestamp"
        ]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string",
            "minLength": 6
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "TokenResponse": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "token_type": {
            "type": "string",
            "example": "bearer"
          },
          "expires_in": {
            "type": "integer",
            "description": "Durée de validité en secondes"
          }
        },
        "required": [
          "access_token",
          "token_type",
          "expires_in"
        ]
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "is_admin": {
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "is_admin"
        ]
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string",
            "example": "ACME Capital"
          },
          "category": {
            "type": "string",
            "enum": [
              "Institution",
              "Wholesale",
              "SDG",
              "CGPI",
              "Autres"
            ]
          },
          "aum": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "aum_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "domicile": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "example": "FR"
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "name",
          "category",
          "language",
          "is_active"
        ]
      },
      "OrganisationCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string",
            "enum": [
              "Institution",
              "Wholesale",
              "SDG",
              "CGPI",
              "Autres"
            ]
          },
          "aum": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "aum_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "domicile": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name",
          "category"
        ]
      },
      "OrganisationUpdate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "aum": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "aum_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "strategies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "website": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "domicile": {
            "type": "string",
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "OrganisationDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Organisation"
          },
          {
            "type": "object",
            "properties": {
              "mandats": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Mandat"
                }
              },
              "contacts": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organisation_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "format": "email",
                      "nullable": true
                    },
                    "phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "title": {
                      "type": "string",
                      "nullable": true
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "organisation_id",
                    "name"
                  ]
                }
              }
            }
          }
        ]
      },
      "OrganisationStats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "by_category": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "by_language": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        },
        "required": [
          "total",
          "by_category",
          "by_language"
        ]
      },
      "PaginatedOrganisations": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Organisation"
            }
          }
        },
        "required": [
          "total",
          "skip",
          "limit",
          "items"
        ]
      },
      "Person": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "personal_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "personal_phone": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "linkedin_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "first_name",
          "last_name"
        ]
      },
      "PersonCreate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "personal_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "personal_phone": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "linkedin_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "nullable": true
          }
        },
        "required": [
          "first_name",
          "last_name"
        ]
      },
      "PersonUpdate": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "nullable": true
          },
          "last_name": {
            "type": "string",
            "nullable": true
          },
          "personal_email": {
            "type": "string",
            "format": "email",
            "nullable": true
          },
          "personal_phone": {
            "type": "string",
            "nullable": true
          },
          "role": {
            "type": "string",
            "nullable": true
          },
          "linkedin_url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "country_code": {
            "type": "string",
            "minLength": 2,
            "maxLength": 2,
            "nullable": true
          },
          "language": {
            "type": "string",
            "minLength": 2,
            "maxLength": 5,
            "nullable": true
          }
        }
      },
      "PersonDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Person"
          },
          {
            "type": "object",
            "properties": {
              "organizations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "nullable": true
                    },
                    "organization_id": {
                      "type": "integer"
                    },
                    "organization_type": {
                      "type": "string",
                      "enum": [
                        "investor",
                        "fournisseur"
                      ]
                    },
                    "job_title": {
                      "type": "string",
                      "nullable": true
                    },
                    "work_email": {
                      "type": "string",
                      "format": "email",
                      "nullable": true
                    },
                    "work_phone": {
                      "type": "string",
                      "nullable": true
                    },
                    "is_primary": {
                      "type": "boolean"
                    },
                    "notes": {
                      "type": "string",
                      "nullable": true
                    }
                  },
                  "required": [
                    "organization_id",
                    "organization_type"
                  ]
                }
              }
            }
          }
        ]
      },
      "PaginatedPeople": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Person"
            }
          }
        },
        "required": [
          "total",
          "skip",
          "limit",
          "items"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "snoozed_until": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "completed_at": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "enum": [
              "critique",
              "haute",
              "moyenne",
              "basse",
              "non_prioritaire"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "todo",
              "doing",
              "done",
              "snoozed"
            ]
          },
          "category": {
            "type": "string",
            "enum": [
              "relance",
              "rdv",
              "email",
              "due_diligence",
              "admin",
              "pitch",
              "negociation",
              "autre"
            ]
          },
          "organisation_id": {
            "type": "integer",
            "nullable": true
          },
          "person_id": {
            "type": "integer",
            "nullable": true
          },
          "is_auto_created": {
            "type": "boolean"
          },
          "auto_creation_rule": {
            "type": "string",
            "nullable": true
          },
          "is_overdue": {
            "type": "boolean"
          },
          "is_today": {
            "type": "boolean"
          },
          "is_next_7_days": {
            "type": "boolean"
          },
          "days_until_due": {
            "type": "integer"
          },
          "person_name": {
            "type": "string",
            "nullable": true
          },
          "linked_entity_display": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "title",
          "due_date",
          "priority",
          "status",
          "category",
          "is_auto_created",
          "is_overdue",
          "is_today",
          "is_next_7_days",
          "days_until_due"
        ]
      },
      "TaskCreate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "format": "date"
          },
          "priority": {
            "type": "string",
            "enum": [
              "critique",
              "haute",
              "moyenne",
              "basse",
              "non_prioritaire"
            ],
            "default": "moyenne"
          },
          "status": {
            "type": "string",
            "enum": [
              "todo",
              "doing",
              "done",
              "snoozed"
            ],
            "default": "todo"
          },
          "category": {
            "type": "string",
            "enum": [
              "relance",
              "rdv",
              "email",
              "due_diligence",
              "admin",
              "pitch",
              "negociation",
              "autre"
            ],
            "default": "autre"
          },
          "organisation_id": {
            "type": "integer",
            "nullable": true
          },
          "person_id": {
            "type": "integer",
            "nullable": true
          },
          "is_auto_created": {
            "type": "boolean",
            "default": false
          },
          "auto_creation_rule": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "title",
          "due_date"
        ]
      },
      "TaskUpdate": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "priority": {
            "type": "string",
            "enum": [
              "critique",
              "haute",
              "moyenne",
              "basse",
              "non_prioritaire"
            ],
            "nullable": true
          },
          "status": {
            "type": "string",
            "enum": [
              "todo",
              "doing",
              "done",
              "snoozed"
            ],
            "nullable": true
          },
          "category": {
            "type": "string",
            "enum": [
              "relance",
              "rdv",
              "email",
              "due_diligence",
              "admin",
              "pitch",
              "negociation",
              "autre"
            ],
            "nullable": true
          },
          "organisation_id": {
            "type": "integer",
            "nullable": true
          },
          "person_id": {
            "type": "integer",
            "nullable": true
          }
        }
      },
      "TaskSnoozeRequest": {
        "type": "object",
        "properties": {
          "days": {
            "type": "integer",
            "minimum": 1,
            "maximum": 365
          }
        },
        "required": [
          "days"
        ]
      },
      "TaskQuickActionRequest": {
        "type": "object",
        "properties": {
          "action": {
            "type": "string",
            "enum": [
              "snooze_1d",
              "snooze_1w",
              "mark_done",
              "next_day"
            ]
          }
        },
        "required": [
          "action"
        ]
      },
      "TaskStats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "overdue": {
            "type": "integer"
          },
          "today": {
            "type": "integer"
          },
          "next_7_days": {
            "type": "integer"
          },
          "by_status": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          },
          "by_priority": {
            "type": "object",
            "additionalProperties": {
              "type": "integer"
            }
          }
        },
        "required": [
          "total",
          "overdue",
          "today",
          "next_7_days",
          "by_status",
          "by_priority"
        ]
      },
      "PaginatedTasks": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Task"
            }
          }
        },
        "required": [
          "total",
          "skip",
          "limit",
          "items"
        ]
      },
      "Mandat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "organisation_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "proposé",
              "signé",
              "actif",
              "terminé"
            ]
          },
          "date_signature": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_debut": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_fin": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "is_actif": {
            "type": "boolean",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "organisation_id",
          "status"
        ]
      },
      "MandatCreate": {
        "type": "object",
        "properties": {
          "organisation_id": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "proposé",
              "signé",
              "actif",
              "terminé"
            ],
            "default": "proposé"
          },
          "date_signature": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_debut": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_fin": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "required": [
          "organisation_id"
        ]
      },
      "MandatUpdate": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "proposé",
              "signé",
              "actif",
              "terminé"
            ],
            "nullable": true
          },
          "date_signature": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_debut": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "date_fin": {
            "type": "string",
            "format": "date",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "MandatDetail": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Mandat"
          },
          {
            "type": "object",
            "properties": {
              "organisation": {
                "$ref": "#/components/schemas/Organisation"
              },
              "produits": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "isin": {
                      "type": "string",
                      "nullable": true
                    },
                    "type": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "id",
                    "name",
                    "type",
                    "status"
                  ]
                }
              }
            },
            "required": [
              "organisation"
            ]
          }
        ]
      },
      "PaginatedMandats": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "skip": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Mandat"
            }
          }
        },
        "required": [
          "total",
          "skip",
          "limit",
          "items"
        ]
      },
      "Webhook": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "url": {
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean"
          },
          "secret": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "required": [
          "id",
          "url",
          "events",
          "is_active",
          "secret"
        ]
      },
      "WebhookCreate": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri"
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "secret": {
            "type": "string",
            "minLength": 16,
            "maxLength": 128,
            "nullable": true
          }
        },
        "required": [
          "url",
          "events"
        ]
      },
      "WebhookUpdate": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "events": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "is_active": {
            "type": "boolean",
            "nullable": true
          },
          "secret": {
            "type": "string",
            "minLength": 16,
            "maxLength": 128,
            "nullable": true
          }
        }
      },
      "WebhookRotateSecretRequest": {
        "type": "object",
        "properties": {
          "secret": {
            "type": "string",
            "minLength": 16,
            "maxLength": 128,
            "nullable": true
          }
        }
      },
      "SearchGlobalResponse": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string"
          },
          "total": {
            "type": "integer"
          },
          "results": {
            "type": "object",
            "properties": {
              "organisations": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "category": {
                      "type": "string"
                    },
                    "score": {
                      "type": "number",
                      "format": "float",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "name"
                  ]
                }
              },
              "people": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "first_name": {
                      "type": "string"
                    },
                    "last_name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string",
                      "nullable": true
                    },
                    "score": {
                      "type": "number",
                      "format": "float",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "first_name",
                    "last_name"
                  ]
                }
              },
              "mandats": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "organisation_id": {
                      "type": "integer"
                    },
                    "status": {
                      "type": "string"
                    },
                    "score": {
                      "type": "number",
                      "format": "float",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "organisation_id",
                    "status"
                  ]
                }
              },
              "tasks": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer"
                    },
                    "title": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "due_date": {
                      "type": "string",
                      "format": "date",
                      "nullable": true
                    },
                    "score": {
                      "type": "number",
                      "format": "float",
                      "nullable": true
                    }
                  },
                  "required": [
                    "id",
                    "title",
                    "status"
                  ]
                }
              }
            }
          }
        },
        "required": [
          "query",
          "total",
          "results"
        ]
      },
      "SearchCollection": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer"
                },
                "label": {
                  "type": "string"
                },
                "excerpt": {
                  "type": "string",
                  "nullable": true
                },
                "score": {
                  "type": "number",
                  "format": "float",
                  "nullable": true
                }
              },
              "required": [
                "id",
                "label"
              ]
            }
          },
          "limit": {
            "type": "integer"
          },
          "offset": {
            "type": "integer"
          }
        },
        "required": [
          "total",
          "items",
          "limit",
          "offset"
        ]
      }
    },
    "securitySchemes": {
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "Unauthorized": {
        "description": "Auth requise",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ValidationError": {
        "description": "Erreur de validation",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "loc": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "msg": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Ressource introuvable",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "detail": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
  }
}