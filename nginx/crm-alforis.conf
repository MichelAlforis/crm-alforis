# ===========================================
# NGINX CONFIGURATION - CRM Alforis
# ===========================================
# Domaine: crm.alforis.fr
# Backend API: Port 8000 (Docker)
# Frontend: Port 3010 (Docker)

# Redirection HTTP → HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name crm.alforis.fr;

    # Let's Encrypt ACME challenge
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirection vers HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS - Frontend + API
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name crm.alforis.fr;

    # Certificats SSL (Let's Encrypt)
    ssl_certificate /etc/letsencrypt/live/crm.alforis.fr/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/crm.alforis.fr/privkey.pem;

    # Configuration SSL moderne (Mozilla Intermediate)
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Headers de sécurité
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logs
    access_log /var/log/nginx/crm-alforis-access.log;
    error_log /var/log/nginx/crm-alforis-error.log;

    # Limite de taille d'upload (pour les fichiers du CRM)
    client_max_body_size 20M;

    # ========================================
    # API BACKEND - /api/*
    # ========================================
    location /api {
        proxy_pass http://localhost:8000;

        # Headers proxy
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Timeouts pour l'API
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Buffers
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;

        # Gestion des erreurs
        proxy_intercept_errors off;
    }

    # ========================================
    # FRONTEND NEXT.JS - /*
    # ========================================
    location / {
        proxy_pass http://localhost:3010;

        # Headers pour Next.js
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Cache bypass pour le hot-reload (dev) et les pages dynamiques
        proxy_cache_bypass $http_upgrade;

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ========================================
    # STATIC FILES (Next.js)
    # ========================================
    location /_next/static {
        proxy_pass http://localhost:3010;
        proxy_cache_valid 200 60m;
        add_header Cache-Control "public, immutable";
    }

    location /static {
        proxy_pass http://localhost:3010;
        proxy_cache_valid 200 60m;
        add_header Cache-Control "public, max-age=3600";
    }

    # ========================================
    # HEALTH CHECKS
    # ========================================
    location /health {
        access_log off;
        return 200 "OK\n";
        add_header Content-Type text/plain;
    }
}
