
"TB"str

0int
"GB"str
1000int
¿µ"Convert a filesize in to a string (powers of 1000, SI prefixes).

    In this convention, ``1000 B = 1 kB``.

    This is typically the format used to advertise the storage
    capacity of USB flash drives and the like (*256 MB* meaning
    actually a storage capacity of more than *256 000 000 B*),
    or used by **Mac OS X** since v10.6 to report file sizes.

    Arguments:
        int (size): A file size.
        int (precision): The number of decimal places to include (default = 1).
        str (separator): The string to separate the value from the units (default = " ").

    Returns:
        `str`: A string containing a abbreviated file size and units.

    Example:
        >>> filesize.decimal(30000)
        '30.0 kB'
        >>> filesize.decimal(30000, precision=2, separator="")
        '30.00kB'

    "str
"MB"str

"EB"str
"ZB"str
"kB"str
"YB"str
	"PB"strsize5 5(	precision7 7( 	separator8 8("	tuple"¸(
&
T T(8"#unknown-value#Btuple&
$
T T(8"
#is-exact#:Bbool

T T(8"
#assume#:8
6
T T(8"#set-field# __collection_size:Bint&
$
T T(8"#array-add-last#:&
$
T T(8"#array-add-last#:&
$
T T(8"#array-add-last#:&
$
T T(8"#array-add-last#:&
$
T T(8"#array-add-last#:	&
$
T T(8"#array-add-last#:
&
$
T T(8"#array-add-last#:&
$
T T(8"#array-add-last#:;
9
R X("$
pip._vendor.rich.filesize_to_str:
R X(*€/Users/test/Documents/ALFORIS FINANCE/06. CRM/V1/crm-backend/temp-venv/lib/python3.12/site-packages/pip/_vendor/rich/filesize.py